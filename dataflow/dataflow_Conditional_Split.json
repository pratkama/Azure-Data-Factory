{
	"name": "dataflow_Conditional_Split",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet_File",
						"type": "DatasetReference"
					},
					"name": "logdataparquet"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "appgrptable",
						"type": "DatasetReference"
					},
					"name": "appgrptbl"
				}
			],
			"transformations": [
				{
					"name": "conditionalsplitappgrp"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Correlationid as string,",
				"          Operationname as string,",
				"          Status as string,",
				"          Eventcategory as string,",
				"          Level as string,",
				"          Time as string,",
				"          Subscription as string,",
				"          Eventinitiatedby as string,",
				"          Resourcetype as string,",
				"          Resourcegroup as string,",
				"          Resource as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> logdataparquet",
				"logdataparquet split(Resourcegroup=='app-grp',",
				"     disjoint: false) ~> conditionalsplitappgrp@(appgrpstream, otherresourcegrps)",
				"conditionalsplitappgrp@appgrpstream sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Correlation id} as string,",
				"          {Operation name} as string,",
				"          Status as string,",
				"          {Event category} as string,",
				"          Level as string,",
				"          Time as timestamp,",
				"          Subscription as string,",
				"          {Event initiated by} as string,",
				"          {Resource type} as string,",
				"          {Resource group} as string,",
				"          Resource as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          {Correlation id} = Correlationid,",
				"          {Operation name} = Operationname,",
				"          Status,",
				"          {Event category} = Status,",
				"          Level,",
				"          Time,",
				"          Subscription,",
				"          {Event initiated by} = Eventinitiatedby,",
				"          {Resource type} = Resourcetype,",
				"          {Resource group} = Resourcegroup,",
				"          Resource",
				"     )) ~> appgrptbl"
			]
		}
	}
}